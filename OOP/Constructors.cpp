#include <iostream>
#include <string>

using namespace std;

/*
Constructor: similar to functions, they construct an object
    same name as the class they belong to
    no return type
    needs to be placed in the public area of the class
    default constructor does not have parameters
    if no default constructor is provided in a class, C++ automatically generates one
    default constructo is invoked when an object of the class is created
Default constructor: initializes properties of an object with default values
Parametrized Constructor: receives input parameters and initializes the object with the input values

Note that once we create any type of constructor, we lose the default constructor that is automatically generated by C++
*/

class User {
public:
    string first_name;
    string last_name;
    int age;
    string email;

    // Default Constructor
    User() {
        first_name = "N/A";
        last_name = "N/A";
        age = 0;
        email = "N/A";
    }
    // Parametrized Constructor
    User(string first_name, string last_name, int age) {
        this->first_name = first_name;
        this->last_name = last_name;
        this->age = age;
        this->email = first_name + last_name + "@gmail.com";
    }

    void print_info() {
        cout << "First name: " << first_name << endl;
        cout << "Last name: " << last_name << endl;
        cout << "Age: " << age << endl;
        cout << "Email: " << email << endl;
    }
};

int main(void) {
    User u1;            // default constructor
    u1.print_info();

    User u2("Jake", "Wronskian", 18);   // parametrized constructor
    u2.print_info();

    return 0;
}